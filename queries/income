from(bucket: "ddpanel")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_measurement"] == "live-gift")
  |> filter(fn: (r) => r.type == "gift" or r.type == "superchat" or r.type == "guard")
  |> filter(fn: (r) => r["_field"] == "price")
  |> group(columns: ["room_id"])
  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: true)
  |> cumulativeSum()
  |> yield(name: "price")