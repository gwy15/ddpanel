from(bucket: "ddpanel")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_measurement"] == "live-popularity")
  |> filter(fn: (r) => r["_field"] == "popularity")
  |> filter(fn: (r) => r._value > 1)
  |> group(columns: ["room_id"])
  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)
  |> yield(name: "mean")